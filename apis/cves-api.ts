/* tslint:disable */
/* eslint-disable */
/**
 * National Vulnerability Database API
 * Swagger specification for <https://nvd.nist.gov/developers/vulnerabilities>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { InlineResponse200 } from '../models';
/**
 * CvesApi - axios parameter creator
 * @export
 */
export const CvesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * The parameters used to retrieve a collection are intended to limit or filter results. The parameters selected for the request are known as the search critera, and all parameters should be included in the URL query. Please note how the only difference betweeen the URL for requesting a single CVE and requesting a collection is a single \"s\".
         * @summary Retrieve a collection of CVE
         * @param {Array<string>} [addOns] This parameter is part of the URL query. By default, the response includes all CPE applicability statements associated with the vulnerability. Applicability statements are CPE match strings that may be used in searching the Official CPE Dictionary. Including &#x60;addOns&#x3D;dictionaryCpes&#x60; adds the official CPE names to the request, but can return a significantly denser amount of text. 
         * @param {string} [apiKey] The API Key provided to the requestor. This parameter is part of the URL query.
         * @param {string} [cpeMatchString] This parameter is used to filter vulnerabilities based on the affected products. The value of &#x60;cpeMatchString&#x60; is compared it against the CPE Match Criteria present on all CVE applicability statements. For more information on Common Platform Enumeration (CPE) please visit NIST&#x27;s [Computer Security Resource Center](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe).
         * @param {string} [cvssV2Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;AV:L/AC:H/Au:M/C:N/I:N/A:N      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;C:H/A:N 
         * @param {string} [cvssV2Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
         * @param {string} [cvssV3Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X/CR:H/IR:H/AR:H      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X 
         * @param {string} [cvssV3Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
         * @param {string} [cweId] CWE refers to the classification of vulnerabilities used by NIST and managed by MITRE at [https://cwe.mitre.org/](https://cwe.mitre.org/). NVD analysts associate one or more CWE to each vulnerability during the analysis process.
         * @param {boolean} [includeMatchStringChange] &#x60;true&#x60; By default, the &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; parameters include only a collection of CVE where the CVE information was modified. The modification of product names by NIST in the Official CPE Dictionary does not modify related CVE. &#x60;includeMatchStringChange&#x3D;true&#x60; returns a collection of CVE where either the vulnerabilities or the associated product names were modified 
         * @param {boolean} [isExactMatch] &#x60;true&#x60; If the keyword is a phrase, i.e., contains more than one term, including &#x60;isExactMatch&#x3D;true&#x60; retrieves records matching the exact phrase. Otherwise, the results contain any record having any of the terms. 
         * @param {string} [keyword] This parameter is used to retrieve records where a word or phrase is found in the vulnerability description or reference links.
         * @param {Date} [modStartDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
         * @param {Date} [modEndDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
         * @param {Date} [pubStartDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
         * @param {Date} [pubEndDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
         * @param {number} [resultsPerPage] This parameter specifies the maximum number of results that are returned based on the request parameters. The default value is 20. For network considerations, maximum allowable limit is 2,000.  The response content &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the starting point for the request. 
         * @param {number} [startIndex] This parameter determines the first CVE in the collection returned by the response. The index is zero-based, meaning the first CVE is at index zero. The response header &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the first CVE for the request.  The best, most efficient, practice for keeping up to date with the NVD is to use the date range parameters in order to request only those CVE that have been published or modified since the last request.  Presently NVD contains more than 160,000 vulnerabilities relating to thousands of vendor products. Multiple consecutive requests are required to return all available records. Requesting an API key significantly raises the number of requests that can be made in a given timeframe. However, NIST firewall rules in place to prevent denial of service attacks on NVD can thwart your application. To avoid this, it is recommended that your application sleeps for several seconds between requests in order that your legitimate requests are not denied. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cves10Get: async (addOns?: Array<string>, apiKey?: string, cpeMatchString?: string, cvssV2Metrics?: string, cvssV2Severity?: string, cvssV3Metrics?: string, cvssV3Severity?: string, cweId?: string, includeMatchStringChange?: boolean, isExactMatch?: boolean, keyword?: string, modStartDate?: Date, modEndDate?: Date, pubStartDate?: Date, pubEndDate?: Date, resultsPerPage?: number, startIndex?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/cves/1.0/`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (addOns) {
                localVarQueryParameter['addOns'] = addOns;
            }

            if (apiKey !== undefined) {
                localVarQueryParameter['apiKey'] = apiKey;
            }

            if (cpeMatchString !== undefined) {
                localVarQueryParameter['cpeMatchString'] = cpeMatchString;
            }

            if (cvssV2Metrics !== undefined) {
                localVarQueryParameter['cvssV2Metrics'] = cvssV2Metrics;
            }

            if (cvssV2Severity !== undefined) {
                localVarQueryParameter['cvssV2Severity'] = cvssV2Severity;
            }

            if (cvssV3Metrics !== undefined) {
                localVarQueryParameter['cvssV3Metrics'] = cvssV3Metrics;
            }

            if (cvssV3Severity !== undefined) {
                localVarQueryParameter['cvssV3Severity'] = cvssV3Severity;
            }

            if (cweId !== undefined) {
                localVarQueryParameter['cweId'] = cweId;
            }

            if (includeMatchStringChange !== undefined) {
                localVarQueryParameter['includeMatchStringChange'] = includeMatchStringChange;
            }

            if (isExactMatch !== undefined) {
                localVarQueryParameter['isExactMatch'] = isExactMatch;
            }

            if (keyword !== undefined) {
                localVarQueryParameter['keyword'] = keyword;
            }

            if (modStartDate !== undefined) {
                localVarQueryParameter['modStartDate'] = (modStartDate as any instanceof Date) ?
                    (modStartDate as any).toISOString() :
                    modStartDate;
            }

            if (modEndDate !== undefined) {
                localVarQueryParameter['modEndDate'] = (modEndDate as any instanceof Date) ?
                    (modEndDate as any).toISOString() :
                    modEndDate;
            }

            if (pubStartDate !== undefined) {
                localVarQueryParameter['pubStartDate'] = (pubStartDate as any instanceof Date) ?
                    (pubStartDate as any).toISOString() :
                    pubStartDate;
            }

            if (pubEndDate !== undefined) {
                localVarQueryParameter['pubEndDate'] = (pubEndDate as any instanceof Date) ?
                    (pubEndDate as any).toISOString() :
                    pubEndDate;
            }

            if (resultsPerPage !== undefined) {
                localVarQueryParameter['resultsPerPage'] = resultsPerPage;
            }

            if (startIndex !== undefined) {
                localVarQueryParameter['startIndex'] = startIndex;
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CvesApi - functional programming interface
 * @export
 */
export const CvesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * The parameters used to retrieve a collection are intended to limit or filter results. The parameters selected for the request are known as the search critera, and all parameters should be included in the URL query. Please note how the only difference betweeen the URL for requesting a single CVE and requesting a collection is a single \"s\".
         * @summary Retrieve a collection of CVE
         * @param {Array<string>} [addOns] This parameter is part of the URL query. By default, the response includes all CPE applicability statements associated with the vulnerability. Applicability statements are CPE match strings that may be used in searching the Official CPE Dictionary. Including &#x60;addOns&#x3D;dictionaryCpes&#x60; adds the official CPE names to the request, but can return a significantly denser amount of text. 
         * @param {string} [apiKey] The API Key provided to the requestor. This parameter is part of the URL query.
         * @param {string} [cpeMatchString] This parameter is used to filter vulnerabilities based on the affected products. The value of &#x60;cpeMatchString&#x60; is compared it against the CPE Match Criteria present on all CVE applicability statements. For more information on Common Platform Enumeration (CPE) please visit NIST&#x27;s [Computer Security Resource Center](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe).
         * @param {string} [cvssV2Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;AV:L/AC:H/Au:M/C:N/I:N/A:N      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;C:H/A:N 
         * @param {string} [cvssV2Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
         * @param {string} [cvssV3Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X/CR:H/IR:H/AR:H      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X 
         * @param {string} [cvssV3Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
         * @param {string} [cweId] CWE refers to the classification of vulnerabilities used by NIST and managed by MITRE at [https://cwe.mitre.org/](https://cwe.mitre.org/). NVD analysts associate one or more CWE to each vulnerability during the analysis process.
         * @param {boolean} [includeMatchStringChange] &#x60;true&#x60; By default, the &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; parameters include only a collection of CVE where the CVE information was modified. The modification of product names by NIST in the Official CPE Dictionary does not modify related CVE. &#x60;includeMatchStringChange&#x3D;true&#x60; returns a collection of CVE where either the vulnerabilities or the associated product names were modified 
         * @param {boolean} [isExactMatch] &#x60;true&#x60; If the keyword is a phrase, i.e., contains more than one term, including &#x60;isExactMatch&#x3D;true&#x60; retrieves records matching the exact phrase. Otherwise, the results contain any record having any of the terms. 
         * @param {string} [keyword] This parameter is used to retrieve records where a word or phrase is found in the vulnerability description or reference links.
         * @param {Date} [modStartDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
         * @param {Date} [modEndDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
         * @param {Date} [pubStartDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
         * @param {Date} [pubEndDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
         * @param {number} [resultsPerPage] This parameter specifies the maximum number of results that are returned based on the request parameters. The default value is 20. For network considerations, maximum allowable limit is 2,000.  The response content &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the starting point for the request. 
         * @param {number} [startIndex] This parameter determines the first CVE in the collection returned by the response. The index is zero-based, meaning the first CVE is at index zero. The response header &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the first CVE for the request.  The best, most efficient, practice for keeping up to date with the NVD is to use the date range parameters in order to request only those CVE that have been published or modified since the last request.  Presently NVD contains more than 160,000 vulnerabilities relating to thousands of vendor products. Multiple consecutive requests are required to return all available records. Requesting an API key significantly raises the number of requests that can be made in a given timeframe. However, NIST firewall rules in place to prevent denial of service attacks on NVD can thwart your application. To avoid this, it is recommended that your application sleeps for several seconds between requests in order that your legitimate requests are not denied. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async cves10Get(addOns?: Array<string>, apiKey?: string, cpeMatchString?: string, cvssV2Metrics?: string, cvssV2Severity?: string, cvssV3Metrics?: string, cvssV3Severity?: string, cweId?: string, includeMatchStringChange?: boolean, isExactMatch?: boolean, keyword?: string, modStartDate?: Date, modEndDate?: Date, pubStartDate?: Date, pubEndDate?: Date, resultsPerPage?: number, startIndex?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse200>>> {
            const localVarAxiosArgs = await CvesApiAxiosParamCreator(configuration).cves10Get(addOns, apiKey, cpeMatchString, cvssV2Metrics, cvssV2Severity, cvssV3Metrics, cvssV3Severity, cweId, includeMatchStringChange, isExactMatch, keyword, modStartDate, modEndDate, pubStartDate, pubEndDate, resultsPerPage, startIndex, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * CvesApi - factory interface
 * @export
 */
export const CvesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * The parameters used to retrieve a collection are intended to limit or filter results. The parameters selected for the request are known as the search critera, and all parameters should be included in the URL query. Please note how the only difference betweeen the URL for requesting a single CVE and requesting a collection is a single \"s\".
         * @summary Retrieve a collection of CVE
         * @param {Array<string>} [addOns] This parameter is part of the URL query. By default, the response includes all CPE applicability statements associated with the vulnerability. Applicability statements are CPE match strings that may be used in searching the Official CPE Dictionary. Including &#x60;addOns&#x3D;dictionaryCpes&#x60; adds the official CPE names to the request, but can return a significantly denser amount of text. 
         * @param {string} [apiKey] The API Key provided to the requestor. This parameter is part of the URL query.
         * @param {string} [cpeMatchString] This parameter is used to filter vulnerabilities based on the affected products. The value of &#x60;cpeMatchString&#x60; is compared it against the CPE Match Criteria present on all CVE applicability statements. For more information on Common Platform Enumeration (CPE) please visit NIST&#x27;s [Computer Security Resource Center](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe).
         * @param {string} [cvssV2Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;AV:L/AC:H/Au:M/C:N/I:N/A:N      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;C:H/A:N 
         * @param {string} [cvssV2Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
         * @param {string} [cvssV3Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X/CR:H/IR:H/AR:H      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X 
         * @param {string} [cvssV3Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
         * @param {string} [cweId] CWE refers to the classification of vulnerabilities used by NIST and managed by MITRE at [https://cwe.mitre.org/](https://cwe.mitre.org/). NVD analysts associate one or more CWE to each vulnerability during the analysis process.
         * @param {boolean} [includeMatchStringChange] &#x60;true&#x60; By default, the &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; parameters include only a collection of CVE where the CVE information was modified. The modification of product names by NIST in the Official CPE Dictionary does not modify related CVE. &#x60;includeMatchStringChange&#x3D;true&#x60; returns a collection of CVE where either the vulnerabilities or the associated product names were modified 
         * @param {boolean} [isExactMatch] &#x60;true&#x60; If the keyword is a phrase, i.e., contains more than one term, including &#x60;isExactMatch&#x3D;true&#x60; retrieves records matching the exact phrase. Otherwise, the results contain any record having any of the terms. 
         * @param {string} [keyword] This parameter is used to retrieve records where a word or phrase is found in the vulnerability description or reference links.
         * @param {Date} [modStartDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
         * @param {Date} [modEndDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
         * @param {Date} [pubStartDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
         * @param {Date} [pubEndDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
         * @param {number} [resultsPerPage] This parameter specifies the maximum number of results that are returned based on the request parameters. The default value is 20. For network considerations, maximum allowable limit is 2,000.  The response content &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the starting point for the request. 
         * @param {number} [startIndex] This parameter determines the first CVE in the collection returned by the response. The index is zero-based, meaning the first CVE is at index zero. The response header &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the first CVE for the request.  The best, most efficient, practice for keeping up to date with the NVD is to use the date range parameters in order to request only those CVE that have been published or modified since the last request.  Presently NVD contains more than 160,000 vulnerabilities relating to thousands of vendor products. Multiple consecutive requests are required to return all available records. Requesting an API key significantly raises the number of requests that can be made in a given timeframe. However, NIST firewall rules in place to prevent denial of service attacks on NVD can thwart your application. To avoid this, it is recommended that your application sleeps for several seconds between requests in order that your legitimate requests are not denied. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async cves10Get(addOns?: Array<string>, apiKey?: string, cpeMatchString?: string, cvssV2Metrics?: string, cvssV2Severity?: string, cvssV3Metrics?: string, cvssV3Severity?: string, cweId?: string, includeMatchStringChange?: boolean, isExactMatch?: boolean, keyword?: string, modStartDate?: Date, modEndDate?: Date, pubStartDate?: Date, pubEndDate?: Date, resultsPerPage?: number, startIndex?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse200>> {
            return CvesApiFp(configuration).cves10Get(addOns, apiKey, cpeMatchString, cvssV2Metrics, cvssV2Severity, cvssV3Metrics, cvssV3Severity, cweId, includeMatchStringChange, isExactMatch, keyword, modStartDate, modEndDate, pubStartDate, pubEndDate, resultsPerPage, startIndex, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * CvesApi - object-oriented interface
 * @export
 * @class CvesApi
 * @extends {BaseAPI}
 */
export class CvesApi extends BaseAPI {
    /**
     * The parameters used to retrieve a collection are intended to limit or filter results. The parameters selected for the request are known as the search critera, and all parameters should be included in the URL query. Please note how the only difference betweeen the URL for requesting a single CVE and requesting a collection is a single \"s\".
     * @summary Retrieve a collection of CVE
     * @param {Array<string>} [addOns] This parameter is part of the URL query. By default, the response includes all CPE applicability statements associated with the vulnerability. Applicability statements are CPE match strings that may be used in searching the Official CPE Dictionary. Including &#x60;addOns&#x3D;dictionaryCpes&#x60; adds the official CPE names to the request, but can return a significantly denser amount of text. 
     * @param {string} [apiKey] The API Key provided to the requestor. This parameter is part of the URL query.
     * @param {string} [cpeMatchString] This parameter is used to filter vulnerabilities based on the affected products. The value of &#x60;cpeMatchString&#x60; is compared it against the CPE Match Criteria present on all CVE applicability statements. For more information on Common Platform Enumeration (CPE) please visit NIST&#x27;s [Computer Security Resource Center](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe).
     * @param {string} [cvssV2Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;AV:L/AC:H/Au:M/C:N/I:N/A:N      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV2Metrics&#x3D;C:H/A:N 
     * @param {string} [cvssV2Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
     * @param {string} [cvssV3Metrics] These parameters are used to filter vulnerabilities based on [CVSS vector strings](https://www.first.org/cvss/specification-document). Either full or partial vector strings may be used.      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X/CR:H/IR:H/AR:H      https://services.nvd.nist.gov/rest/json/cves/1.0?cvssV3Metrics&#x3D;S:U/AV:N/AC:L/PR:H/UI:N/C:L/I:L/A:N/E:F/RL:X 
     * @param {string} [cvssV3Severity] CVSS refers to the scoring system used by NIST to assess the severity of vulnerabilities, [https://www.first.org/cvss/](https://cwe.mitre.org/). Either the &#x60;cvssV2Severity&#x60; or &#x60;cvssV3Severity&#x60; parameter may be used to find vulnerabilities having a severity of LOW, MEDIUM, or HIGH. For CVSS V3.x, &#x60;cvssV3Severity&#x3D;CRITICAL&#x60; is also supported.
     * @param {string} [cweId] CWE refers to the classification of vulnerabilities used by NIST and managed by MITRE at [https://cwe.mitre.org/](https://cwe.mitre.org/). NVD analysts associate one or more CWE to each vulnerability during the analysis process.
     * @param {boolean} [includeMatchStringChange] &#x60;true&#x60; By default, the &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; parameters include only a collection of CVE where the CVE information was modified. The modification of product names by NIST in the Official CPE Dictionary does not modify related CVE. &#x60;includeMatchStringChange&#x3D;true&#x60; returns a collection of CVE where either the vulnerabilities or the associated product names were modified 
     * @param {boolean} [isExactMatch] &#x60;true&#x60; If the keyword is a phrase, i.e., contains more than one term, including &#x60;isExactMatch&#x3D;true&#x60; retrieves records matching the exact phrase. Otherwise, the results contain any record having any of the terms. 
     * @param {string} [keyword] This parameter is used to retrieve records where a word or phrase is found in the vulnerability description or reference links.
     * @param {Date} [modStartDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
     * @param {Date} [modEndDate] These parameters specify a collection of CVE that were modified during the period. If filtering by the modification date, both &#x60;modStartDate&#x60; and &#x60;modEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a +01:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?modStartDate&#x3D;2021-08-04T13:00:00:000 UTC%2B01:00&amp;modEndDate&#x3D;2021-10-22T13:36:00:000 UTC%2B01:00 
     * @param {Date} [pubStartDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
     * @param {Date} [pubEndDate] These parameters specify a collection of CVE that were added to the NVD (i.e., published) during the period. If filtering by the publication date, both &#x60;pubStartDate&#x60; and &#x60;pubEndDate&#x60; are **REQUIRED**. Filtering with only one parameter will return a successful response without data. The maximum allowable range when using the date range parameters is 120 consecutive days. Date range parameters are in the form:      yyyy-MM-ddTHH:mm:ss:SSS Z  The T is a literal to separate the date from the time. The Z indicates an offset-from-UTC. If a positive Z value is used (such as +01:00 for Central European Time) then the \&quot;+\&quot; should be encoded in the request as \&quot;%2B\&quot;. This may be handled automatically by the user agent. An example is provided below showing a -05:00 offset-from-UTC.      https://services.nvd.nist.gov/rest/json/cves/1.0/?pubStartDate&#x3D;2021-08-04T13:00:00:000 UTC-05:00&amp;pubEndDate&#x3D;2021-10-22T13:36:00:000 UTC-05:00 
     * @param {number} [resultsPerPage] This parameter specifies the maximum number of results that are returned based on the request parameters. The default value is 20. For network considerations, maximum allowable limit is 2,000.  The response content &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the starting point for the request. 
     * @param {number} [startIndex] This parameter determines the first CVE in the collection returned by the response. The index is zero-based, meaning the first CVE is at index zero. The response header &#x60;totalResults&#x60; indicates the number of CVE results that match request parameters. If the value of &#x60;totalResults&#x60; is greater than the value of &#x60;resultsPerPage&#x60;, the parameter &#x60;startIndex&#x60; may be used in subsequent requests to identify the first CVE for the request.  The best, most efficient, practice for keeping up to date with the NVD is to use the date range parameters in order to request only those CVE that have been published or modified since the last request.  Presently NVD contains more than 160,000 vulnerabilities relating to thousands of vendor products. Multiple consecutive requests are required to return all available records. Requesting an API key significantly raises the number of requests that can be made in a given timeframe. However, NIST firewall rules in place to prevent denial of service attacks on NVD can thwart your application. To avoid this, it is recommended that your application sleeps for several seconds between requests in order that your legitimate requests are not denied. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CvesApi
     */
    public async cves10Get(addOns?: Array<string>, apiKey?: string, cpeMatchString?: string, cvssV2Metrics?: string, cvssV2Severity?: string, cvssV3Metrics?: string, cvssV3Severity?: string, cweId?: string, includeMatchStringChange?: boolean, isExactMatch?: boolean, keyword?: string, modStartDate?: Date, modEndDate?: Date, pubStartDate?: Date, pubEndDate?: Date, resultsPerPage?: number, startIndex?: number, options?: AxiosRequestConfig) : Promise<AxiosResponse<InlineResponse200>> {
        return CvesApiFp(this.configuration).cves10Get(addOns, apiKey, cpeMatchString, cvssV2Metrics, cvssV2Severity, cvssV3Metrics, cvssV3Severity, cweId, includeMatchStringChange, isExactMatch, keyword, modStartDate, modEndDate, pubStartDate, pubEndDate, resultsPerPage, startIndex, options).then((request) => request(this.axios, this.basePath));
    }
}
